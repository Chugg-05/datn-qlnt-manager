package com.example.datn_qlnt_manager.exception;

import org.springframework.http.HttpStatus;

import lombok.AccessLevel;
import lombok.Getter;
import lombok.experimental.FieldDefaults;

@Getter
@FieldDefaults(level = AccessLevel.PRIVATE)
public enum  ErrorCode {
    // Code: 500
    INTERNAL_SERVER_ERROR(500, "internal.server.error", HttpStatus.INTERNAL_SERVER_ERROR),
    UPLOAD_FAILED(500, "upload.failed", HttpStatus.INTERNAL_SERVER_ERROR),
    JSON_PROCESSING_ERROR(500, "json.processing.error", HttpStatus.INTERNAL_SERVER_ERROR),

    // Code: 401
    UNAUTHORIZED(401, "unauthorized", HttpStatus.UNAUTHORIZED),
    INVALID_TOKEN_FORMAT(401, "invalid.token.format", HttpStatus.UNAUTHORIZED),
    INVALID_SIGNATURE(401, "invalid.signature", HttpStatus.UNAUTHORIZED),
    EXPIRED_TOKEN(401, "expired.token", HttpStatus.UNAUTHORIZED),
    TOKEN_BLACKLISTED(401, "token.blacklisted", HttpStatus.UNAUTHORIZED),

    // Code: 403
    FORBIDDEN(403, "forbidden", HttpStatus.FORBIDDEN),
    CANT_REMOVE_USER(403, "cant.remove.user", HttpStatus.FORBIDDEN),
    ACCOUNT_HAS_BEEN_LOCKED(403, "account.has.been.locked", HttpStatus.FORBIDDEN),
    FORBIDDEN_CATEGORY_TYPE(
            400, "forbidden.category.type", HttpStatus.FORBIDDEN),

    // Code: 400
    BAD_REQUEST(400, "bad.request", HttpStatus.BAD_REQUEST),
    CANNOT_SEND_EMAIL(400, "cannot.send.email", HttpStatus.BAD_REQUEST),
    EMAIL_SENDING_FAILED(400, "email.sending.failed", HttpStatus.BAD_REQUEST),
    INVALID_KEY(400, "invalid.key", HttpStatus.BAD_REQUEST),
    INVALID_TOKEN(400, "invalid.token", HttpStatus.BAD_REQUEST),
    USER_NOT_DELETED(400, "user.not.deleted", HttpStatus.BAD_REQUEST),
    USER_NOT_LOCKED(400, "user.not.locked", HttpStatus.BAD_REQUEST),
    INVALID_EMAIL_BLANK(400, "invalid.email.blank", HttpStatus.BAD_REQUEST),
    INVALID_EMAIL_FORMAT(400, "invalid.email.format", HttpStatus.BAD_REQUEST),
    INVALID_EMAIL_OR_PASSWORD(400, "invalid.email.or.password", HttpStatus.BAD_REQUEST),
    INVALID_FULL_NAME(400, "invalid.full.name", HttpStatus.BAD_REQUEST),
    INVALID_PASSWORD(400, "invalid.password", HttpStatus.BAD_REQUEST),
    INVALID_PASSWORD_BLANK(400, "invalid.password.blank", HttpStatus.BAD_REQUEST),
    INVALID_PASSWORD_LENGTH(400, "invalid.password.length", HttpStatus.BAD_REQUEST),
    INVALID_PASSWORD_UPPERCASE(400, "invalid.password.uppercase", HttpStatus.BAD_REQUEST),
    INVALID_PASSWORD_LOWERCASE(400, "invalid.password.lowercase", HttpStatus.BAD_REQUEST),
    INVALID_PASSWORD_NUMBER(400, "invalid.password.number", HttpStatus.BAD_REQUEST),
    INVALID_PASSWORD_SPECIAL_CHARACTERS(
            400, "invalid.password.special.characters", HttpStatus.BAD_REQUEST),
    INVALID_GENDER_BLANK(400, "invalid.gender.blank", HttpStatus.BAD_REQUEST),
    INVALID_DOB(400, "invalid.dob", HttpStatus.BAD_REQUEST),
    INVALID_PHONE(400, "invalid.phone", HttpStatus.BAD_REQUEST),
    INVALID_PHONE_BLANK(400, "invalid.phone.blank", HttpStatus.BAD_REQUEST),
    PASSWORDS_CONFIRM_NOT_MATCH(400, "passwords.confirm.not.match", HttpStatus.BAD_REQUEST),
    NEW_PASSWORD_SAME_AS_OLD(400, "new.password.same.as.old", HttpStatus.BAD_REQUEST),
    INVALID_PHONE_NUMBER_FORMAT(
            400,
            "invalid.phone.number.format",
            HttpStatus.BAD_REQUEST),
    INVALID_ROLE_NAME_AND_PERMISSION_BLANK(400, "invalid.role.name.and.permission.blank", HttpStatus.BAD_REQUEST),
    INVALID_ROLE_NAME_AND_PERMISSION_FORMAT(
            400,
            "invalid.role.name.and.permission.format",
            HttpStatus.BAD_REQUEST),
    INVALID_DESCRIPTION_BLANK(400, "invalid.description.blank", HttpStatus.BAD_REQUEST),
    INVALID_PERMISSION_BLANK(400, "invalid.permission.blank", HttpStatus.BAD_REQUEST),
    INVALID_OTP_BLANK(400, "invalid.otp.blank", HttpStatus.BAD_REQUEST),
    INVALID_OTP_FORMAT(400, "invalid.otp.format", HttpStatus.BAD_REQUEST),

    REFRESH_TOKEN_INVALID(400, "refresh.token.invalid", HttpStatus.BAD_REQUEST),
    BUILDING_ID_REQUIRED(400,"building.id.required", HttpStatus.BAD_REQUEST),
    REFRESH_TOKEN_EXPIRED(400, "refresh.token.expired", HttpStatus.BAD_REQUEST),
    INVALID_OTP_CODE(400, "invalid.otp.code", HttpStatus.BAD_REQUEST),
    INVALID_ISSUER(400, "invalid.issuer", HttpStatus.BAD_REQUEST),
    INVALID_AUDIENCE(400, "invalid.audience", HttpStatus.BAD_REQUEST),

    INVALID_FLOORS_NUMBER_FOR_RENT(
            400, "invalid.floors.number.for.rent", HttpStatus.BAD_REQUEST),
    ACTUAL_FLOOR_NUMBER_IS_INVALID(400, "actual.floor.number.is.invalid", HttpStatus.BAD_REQUEST),
    INVALID_RENTAL_FLOOR_NUMBER(400, "invalid.rental.floor.number", HttpStatus.BAD_REQUEST),
    INVALID_BUILDING_CODE_BLANK(400, "invalid.building.code.blank", HttpStatus.BAD_REQUEST),
    INVALID_BUILDING_NAME_BLANK(400,"invalid.building.name.blank", HttpStatus.BAD_REQUEST),
    INVALID_ADDRESS_BLANK(400, "invalid.address.blank", HttpStatus.BAD_REQUEST),
    INVALID_ACTUAL_NUMBER_OF_FLOORS_BLANK(400,"invalid.actual.number.of.floors.blank", HttpStatus.BAD_REQUEST),
    INVALID_NUMBER_OF_FLOORS_FOR_RENT_BLANK(400, "invalid.number.of.floors.for.rent.blank", HttpStatus.BAD_REQUEST),
    INVALID_BUILDING_TYPE_BLANK(400, "invalid.building.type.blank", HttpStatus.BAD_REQUEST),
    INVALID_BUILDING_STATUS_BLANK(400, "invalid.building.status.blank", HttpStatus.BAD_REQUEST),

    FLOOR_NAME_INVALID(400, "floor.name.invalid", HttpStatus.BAD_REQUEST),
    MAX_ROOM_INVALID(400, "max.room.invalid", HttpStatus.BAD_REQUEST),
    FLOOR_TYPE_INVALID(400, "floor.type.invalid", HttpStatus.BAD_REQUEST),
    STATUS_TYPE_INVALID(400, "status.type.invalid", HttpStatus.BAD_REQUEST),
    MAX_ROOM_AT_LEAST(400, "max.room.at.least", HttpStatus.BAD_REQUEST),
    MAX_ROOM_SEARCH(400, "max.room.search", HttpStatus.BAD_REQUEST),
    MAX_ROOM_AT_MOST(400, "max.room.at.most", HttpStatus.BAD_REQUEST),
    FLOOR_ROOM_LIMIT_REACHED(400, "floor.room.limit.reached", HttpStatus.BAD_REQUEST),

    INVALID_CUSTOMER_CODE_BLANK(400, "invalid.customer.code.blank", HttpStatus.BAD_REQUEST),
    INVALID_ID_NUMBER_BLANK(400, "invalid.id.number.blank", HttpStatus.BAD_REQUEST),
    INVALID_ID_NUMBER_FORMAT(400, "invalid.id.number.format", HttpStatus.BAD_REQUEST),
    INVALID_TENANT_STATUS_BLANK(400, "invalid.tenant.status.blank", HttpStatus.BAD_REQUEST),
    TENANT_CANNOT_BE_DELETED(400, "tenant.cannot.be.deleted", HttpStatus.BAD_REQUEST),
    TENANT_CANNOT_BE_TOGGLED(400, "tenant.cannot.be.toggled", HttpStatus.BAD_REQUEST),

    INVALID_VEHICLE_STATUS_BLANK(400, "invalid.vehicle.status.blank", HttpStatus.BAD_REQUEST),
    INVALID_VEHICLE_TYPE_BLANK(400, "invalid.vehicle.type.blank", HttpStatus.BAD_REQUEST),
    INVALID_LICENSE_PLATE_BLANK(400, "invalid.license.plate.blank", HttpStatus.BAD_REQUEST),
    INVALID_REGISTRATION_DATE_BLANK(400, "invalid.registration.date.blank", HttpStatus.BAD_REQUEST),
    INVALID_TENANT_ID_BLANK(400, "invalid.tenant.id.blank", HttpStatus.BAD_REQUEST),
    INVALID_REGISTRATION_DATE(400, "invalid.registration.date", HttpStatus.BAD_REQUEST),
    INVALID_LICENSE_PLATE(
            400, "invalid.license.plate", HttpStatus.BAD_REQUEST),
    // Service Room Validation
    ROOM_ID_REQUIRED(400, "room.id.required", HttpStatus.BAD_REQUEST),
    SERVICE_ID_REQUIRED(400, "service.id.required", HttpStatus.BAD_REQUEST),
    START_DATE_REQUIRED(400, "start.date.required", HttpStatus.BAD_REQUEST),
    START_DATE_MUST_BE_TODAY_OR_FUTURE(400, "start.date.must.be.today.or.future", HttpStatus.BAD_REQUEST),
    TOTAL_PRICE_REQUIRED(400, "total.price.required", HttpStatus.BAD_REQUEST),
    TOTAL_PRICE_MUST_BE_NON_NEGATIVE(400, "total.price.must.be.non.negative", HttpStatus.BAD_REQUEST),
    STATUS_REQUIRED(400, "status.required", HttpStatus.BAD_REQUEST),

    INVALID_DEFAULT_SERVICE_APPLIES_TO_NULL(400, "invalid.default.service.applies.to.null", HttpStatus.BAD_REQUEST),
    INVALID_PRICES_APPLY_NULL(400, "invalid.prices.apply.null", HttpStatus.BAD_REQUEST),
    INVALID_START_APPLYING_NULL(400, "invalid.start.applying.null", HttpStatus.BAD_REQUEST),
    INVALID_DEFAULT_SERVICE_STATUS_NULL(400, "invalid.default.service.status.null", HttpStatus.BAD_REQUEST),
    INVALID_BUILDING_ID_NULL(404, "invalid.building.id.null", HttpStatus.NOT_FOUND),
    INVALID_SERVICE_ID_NULL(404, "invalid.service.id.null", HttpStatus.NOT_FOUND),
    PRICES_APPLY_INVALID(400, "prices.apply.invalid", HttpStatus.BAD_REQUEST),
    DUPLICATE_SERVICE(400, "duplicate.service", HttpStatus.BAD_REQUEST),

    INVALID_NUMBER_OF_PEOPLE(400, "invalid.number.of.people", HttpStatus.BAD_REQUEST),
    INVALID_START_DATE_BLANK(400, "invalid.start.date.blank", HttpStatus.BAD_REQUEST),
    INVALID_END_DATE_BLANK(400, "invalid.end.date.blank", HttpStatus.BAD_REQUEST),
    INVALID_DEPOSIT_BLANK(400, "invalid.deposit.blank", HttpStatus.BAD_REQUEST),
    INVALID_DEPOSIT(400, "invalid.deposit", HttpStatus.BAD_REQUEST),
    INVALID_TENANTS_BLANK(400, "invalid.tenants.blank", HttpStatus.BAD_REQUEST),
    INVALID_TENANTS(400, "invalid.tenants", HttpStatus.BAD_REQUEST),
    INVALID_CONTRACT_STATUS_BLANK(400, "invalid.contract.status.blank", HttpStatus.BAD_REQUEST),
    NUMBER_OF_PEOPLE_EXCEEDS_LIMIT(400, "number.or.people.exceeds.limit", HttpStatus.NOT_FOUND),
    END_DATE_BEFORE_START_DATE(400, "end.date.before.start.date", HttpStatus.NOT_FOUND),
    TENANTS_EXCEEDS_NUMBER_OF_PEOPLE(
            400, "tenants.exceeds.number.of.people", HttpStatus.NOT_FOUND),
    CANNOT_DELETE_CONTRACT(400, "cannot.delete.contract", HttpStatus.NOT_FOUND),
    CANNOT_REACTIVATE_EXPIRED_CONTRACT(400, "cannot.reactivate.expired.contract", HttpStatus.BAD_REQUEST),
    CANNOT_ACTIVATION_CONTRACT(400, "cannot.activation.contract", HttpStatus.BAD_REQUEST),
    OWNER_ID_REQUIRED(400, "owner.id.required", HttpStatus.BAD_REQUEST),
    IS_REPRESENTATIVE_REQUIRED(400, "is.representative.required", HttpStatus.BAD_REQUEST),
    TENANT_ALREADY_IN_CONTRACT(
            400, "tenant.already.in.contract", HttpStatus.BAD_REQUEST),
    TENANT_HAS_NO_CONTRACT(400, "tenant.has.no.contract", HttpStatus.BAD_REQUEST),
    CANNOT_ADD_MORE_FLOORS(
            400, "cannot.add.more.floors", HttpStatus.BAD_REQUEST),
    CANNOT_TOGGLE_SERVICE_STATUS(400, "cannot.toggle.service.status", HttpStatus.BAD_REQUEST),
    CANNOT_TOGGLE_ASSET_STATUS(400, "cannot.toggle.asset.status", HttpStatus.BAD_REQUEST),

    INVALID_TITLE_BLANK(400, "invalid.title.blank", HttpStatus.BAD_REQUEST),
    INVALID_JOB_PRIORITY_LEVEL_NULL(400, "invalid.job.priority.level.null", HttpStatus.BAD_REQUEST),
    INVALID_JOB_STATUS_NULL(400, "invalid.job.status.null", HttpStatus.BAD_REQUEST),
    INVALID_COMPLETION_DEADLINE_NULL(400, "invalid.completion.deadline.null", HttpStatus.BAD_REQUEST),
    INVALID_JOB_OBJECT_TYPE_NULL(400, "invalid.job.object.type.null", HttpStatus.BAD_REQUEST),
    INVALID_COMPLETION_DEADLINE_PAST(400, "invalid.completion.deadline.past", HttpStatus.BAD_REQUEST),
    INVALID_SERVICE_APPLIES(400, "invalid.service.applies", HttpStatus.BAD_REQUEST),

    INVOICE_CREATION_FAILED(400, "invoice.creation.failed", HttpStatus.BAD_REQUEST),
    INVOICE_ALREADY_EXISTS(400, "invoice.already.exists", HttpStatus.BAD_REQUEST),
    CONTRACT_NOT_ACTIVE(400, "contract.not.active", HttpStatus.BAD_REQUEST),
    INVALID_SERVICE_TYPE(400, "invalid.service.type", HttpStatus.BAD_REQUEST),
    METER_TYPE_NOT_FOUND(400, "meter.type.not.found", HttpStatus.BAD_REQUEST),
    DUPLICATE_INVOICE_DETAIL(400, "duplicate.invoice.detail", HttpStatus.BAD_REQUEST),
    INVALID_METER_READING(
            400, "invalid.meter.reading", HttpStatus.BAD_REQUEST),
    INVALID_COMPENSATION_DATA(400, "invalid.compensation.data", HttpStatus.UNAUTHORIZED),
    INVOICE_ITEM_TYPE_NOT_NULL(400, "invoice.item.type.not.null", HttpStatus.BAD_REQUEST),
    INVALID_NEW_INDEX_MIN(400, "invalid.new.index.min", HttpStatus.BAD_REQUEST),
    INVALID_QUANTITY_MIN(400, "invalid.quantity.min", HttpStatus.BAD_REQUEST),
    INVALID_UNIT_PRICE_MIN(400, "invalid.unit.price", HttpStatus.BAD_REQUEST),
    CANNOT_DELETE_ROOM_CHARGE(400, "can.not.delete.room.charge", HttpStatus.BAD_REQUEST),
    NOT_LAST_MONTH_OF_CONTRACT(400, "not.last.month.of.contract", HttpStatus.BAD_REQUEST),
    MISSING_MAIN_INVOICE(400, "missing.main.invoice", HttpStatus.BAD_REQUEST),
    DUPLICATE_END_INVOICE(400, "duplicate.end.invoice", HttpStatus.BAD_REQUEST),
    INVOICE_ALREADY_CANCELLED(400, "invoice.already.cancelled", HttpStatus.BAD_REQUEST),
    INVALID_INVOICE_STATUS(400, "invalid.invoice.status", HttpStatus.BAD_REQUEST),
    INVOICE_NOT_EDITABLE(400, "invoice.not.editable", HttpStatus.BAD_REQUEST),
    INVALID_PAYMENT_DUE_DATE(
            400, "invalid.payment.due.date", HttpStatus.BAD_REQUEST),
    INVOICE_CAN_NOT_BE_DELETED(400, "invoice.can.not.be.deleted", HttpStatus.BAD_REQUEST),
    INVALID_ASSETS_BLANK(400, "invalid.assets.blank", HttpStatus.BAD_REQUEST),
    INVALID_ASSETS(400, "invalid.assets", HttpStatus.BAD_REQUEST),

    INVALID_CATEGORY_WITH_CALCULATION(400, "invalid.category.with.calculation", HttpStatus.BAD_REQUEST),
    UNIT_REQUIRED_FOR_CALCULATION(
            400, "unit.required.for.calculation", HttpStatus.BAD_REQUEST),
    INVALID_UNIT_COMBINATION(
            400,
            "invalid.unit.combination",
            HttpStatus.BAD_REQUEST),
    INVALID_SERVICE_NAME_BLANK(400, "invalid.service.name.blank", HttpStatus.BAD_REQUEST),
    INVALID_SERVICE_CATEGORY_NULL(400, "invalid.service.category.null", HttpStatus.BAD_REQUEST),
    INVALID_PRICE(400, "invalid.price", HttpStatus.BAD_REQUEST),
    INVALID_PRICE_NULL(400, "invalid.price.null", HttpStatus.BAD_REQUEST),
    INVALID_SERVICE_CALCULATION_NULL(400, "invalid.service.calculation.null", HttpStatus.BAD_REQUEST),
    INVALID_SERVICE_STATUS_NULL(400, "invalid.service.status.null", HttpStatus.BAD_REQUEST),
    METER_READING_ALREADY_BILLED(400, "meter.reading.already.billed", HttpStatus.BAD_REQUEST),
    CONTRACT_EXPIRED(400, "contract.expired", HttpStatus.BAD_REQUEST),
    SERVICE_ROOM_ALREADY_EXISTS(400, "service.room.already.exists", HttpStatus.BAD_REQUEST),
    NEW_UNIT_PRICE_REQUIRED(400, "new.unit.price.required", HttpStatus.BAD_REQUEST),
    UNIT_PRICE_REQUIRED(400, "unit.price.is.required", HttpStatus.BAD_REQUEST),
    PRICE_MUST_BE_POSITIVE(400, "price.must.be.positive", HttpStatus.BAD_REQUEST),
    INVALID_ASSET_TYPE_NOT_NULL(400, "invalid.asset.type.not.null", HttpStatus.BAD_REQUEST),
    INVALID_SECURITY_ASSET_LOCATION(400, "invalid.security.asset.location", HttpStatus.BAD_REQUEST),
    ASSET_NAME_NOT_BLANK(400, "asset.name.must.not.be.blank", HttpStatus.BAD_REQUEST),
    ASSET_ROOM_ALREADY_EXISTS(400, "asset.room.already.exists", HttpStatus.BAD_REQUEST),
    ASSET_BELONG_TO_REQUIRED(400, "asset.belong.to.required", HttpStatus.BAD_REQUEST),
    INVALID_ASSET_BELONG_TO(400, "invalid.asset.belong.to.value", HttpStatus.BAD_REQUEST),
    PUBLIC_ASSET(400, "you.cannot.add.shared.property.to.a.room", HttpStatus.BAD_REQUEST),
    SERVICE_IDS_REQUIRED(400, "service.ids.required", HttpStatus.BAD_REQUEST),
    ASSET_ID_REQUIRED(400, "asset.id.required", HttpStatus.BAD_REQUEST),
    ROOM_NOT_FOUND_IN_BUILDING(400, "room.not.found.in.this.building", HttpStatus.BAD_REQUEST),
    ASSET_NOT_ACTIVE(400, "asset.is.not.active", HttpStatus.BAD_REQUEST),
    SERVICE_NOT_ACTIVE(400, "service.not.active", HttpStatus.BAD_REQUEST),
    NO_PENDING_INVOICES(400, "no.pending.invoices", HttpStatus.BAD_REQUEST),
    ALL_INVOICES_ALREADY_HAVE_RECEIPTS(400, "all.invoices.already.have.receipt", HttpStatus.BAD_REQUEST),
    INVALID_PAYMENT_METHOD(400, "invalid.payment.method", HttpStatus.BAD_REQUEST),
    NOT_SUPPORTED_YET(400, "not.supported.yet", HttpStatus.BAD_REQUEST),
    CANNOT_REFUSE_PAYMENTS(400, "cannot.refuse.payments", HttpStatus.BAD_REQUEST),
    INVALID_PAYMENT_STATUS(400, "invalid.payment.status", HttpStatus.BAD_REQUEST),
    REASON_CAN_NOT_BE_NULL(400, "reason.can.not.be.null", HttpStatus.BAD_REQUEST),
    INVALID_SERVICE_CATEGORY(400, "invalid.service.category", HttpStatus.BAD_REQUEST),
    MISSING_NUMBER_OF_PEOPLE_IN_CONTRACT(400, "missing.number.of.people.in.contract", HttpStatus.BAD_REQUEST),
    INVALID_VEHICLE_COUNT(400, "invalid.vehicle.count", HttpStatus.BAD_REQUEST),
    INVALID_QUANTITY_NOT_NULL(400, "invalid.quantity.not.null", HttpStatus.BAD_REQUEST),
    CONTRACT_NOT_ELIGIBLE_FOR_INVOICE(400, "contract.not.eligible.for.invoice", HttpStatus.BAD_REQUEST),
    INVALID_SERVICE_CALCULATION(400, "invalid.service.calculation", HttpStatus.BAD_REQUEST),
    ERROR_IN_CALCULATION_OF_SERVICE(400, "error.in.calculation.of.service", HttpStatus.BAD_REQUEST),
    PAYMENT_DUE_DATE_IN_PAST(400, "payment.due.date.in.past", HttpStatus.BAD_REQUEST),
    PAYMENT_DUE_DATE_TOO_FAR(400, "payment.due.date.too.far", HttpStatus.BAD_REQUEST),
    NO_ACTIVE_CONTRACT_FOUND(400, "no.active.contract.found", HttpStatus.BAD_REQUEST),
    QUANTITY_MUST_BE_POSITIVE(400, "quantity.must.be.greater.than.0", HttpStatus.BAD_REQUEST),
    ASSET_QUANTITY_NOT_ENOUGH(400, "asset.quantity.is.not.enough", HttpStatus.BAD_REQUEST),
    ROOM_ALREADY_HAS_ACTIVE_CONTRACT(400, "This room already has an active contract.", HttpStatus.BAD_REQUEST),
    ROOM_HAS_NO_ASSET(400, "room.has.no.asset", HttpStatus.BAD_REQUEST),
    CONTRACT_MUST_HAVE_TENANT(400, "contract.must.have.tenant", HttpStatus.BAD_REQUEST),
    MUST_HAVE_ONE_REPRESENTATIVE(400, "must.have.one.representative", HttpStatus.BAD_REQUEST),
    VEHICLE_ALREADY_IN_ACTIVE_CONTRACT(400, "vehicle.already.in.active.contract", HttpStatus.BAD_REQUEST),
    ROOM_ALREADY_IN_CONTRACT(400, "room.already.in.contract", HttpStatus.BAD_REQUEST),
    NUMBER_OF_PEOPLE_MISMATCH(400, "number.of.people.mismatch", HttpStatus.BAD_REQUEST),
    DUPLICATED_TENANTS_IN_REQUEST(400, "duplicated.tenants.in.request", HttpStatus.BAD_REQUEST),
    INVALID_REPRESENTATIVE_SELECTION(400, "invalid.representative.selection", HttpStatus.BAD_REQUEST),
    TENANT_NOT_IN_CONTRACT(400, "tenant.not.in.contract", HttpStatus.BAD_REQUEST),
    CANNOT_DELETE_REPRESENTATIVE_TENANT(400, "cannot.delete.representative.tenant", HttpStatus.BAD_REQUEST),
    REPRESENTATIVE_NOT_FOUND(400, "representative.not.found", HttpStatus.BAD_REQUEST),
    REPRESENTATIVE_DUPLICATE(400, "representative.duplicate", HttpStatus.BAD_REQUEST),
    VEHICLE_NOT_IN_CONTRACT(400, "vehicle.not.in.contract", HttpStatus.BAD_REQUEST),
    CONTRACT_NOT_ALLOW_DELETE_DEPOSIT(400, "contract.not.allow.delete.deposit", HttpStatus.BAD_REQUEST),
    DEPOSIT_ALREADY_EXISTS(400, "deposit.already.exists", HttpStatus.BAD_REQUEST),
    CONTRACT_NOT_ALLOW_CONFIRM_DEPOSIT(400, "contract.not.allow.confirm.deposit", HttpStatus.BAD_REQUEST),
    ROOM_NOT_AVAILABLE(400, "room.not.available", HttpStatus.BAD_REQUEST),
    CANNOT_UPDATE_ROOM(400, "cannot.update.room", HttpStatus.BAD_REQUEST),
    INVALID_CONTENT_IN_CONTRACT(400, "invalid.content.in.contract", HttpStatus.BAD_REQUEST),
    INVALID_CONTRACT_STATUS_FOR_INVOICE(400, "invalid.contract.status.for.invoice", HttpStatus.BAD_REQUEST),
    INVALID_END_DATE(400, "invalid.end.date", HttpStatus.BAD_REQUEST),
    END_DATE_BEFORE_CURRENT(400,"end.date.before.current",HttpStatus.BAD_REQUEST),
    CONTRACT_NOT_ELIGIBLE_FOR_EXTENSION(400,"", HttpStatus.BAD_REQUEST),
    TENANT_NOT_ELIGIBLE_FOR_CONTRACT(400,"tenant.not.eligible.for.contract", HttpStatus.BAD_REQUEST),
    CANNOT_UPDATE_MAXIMUM_ROOM(400,"cannot.update.maximum.room", HttpStatus.BAD_REQUEST),
    INVALID_CONTRACT_DURATION(400,"invalid.contract.duration", HttpStatus.BAD_REQUEST),
    INVALID_MONTH(400,"invalid.month", HttpStatus.BAD_REQUEST),
    ROOM_NOT_AVAILABLE_FOR_RENT(400,"room.not.available.for.rent", HttpStatus.BAD_REQUEST),
    ROOM_CANNOT_BE_DELETED(400, "room.cannot.be.deleted", HttpStatus.BAD_REQUEST),
    CONTRACT_NOT_ELIGIBLE_FOR_UPDATE(400,"contract.not.eligible.for.update", HttpStatus.BAD_REQUEST),
    CANNOT_UPDATE_ACTUAL_NUMBER_OF_FLOORS(400,"cannot.update.actual.number.of.floors", HttpStatus.BAD_REQUEST),
    OLD_PASSWORD_NOT_MATCH(400,"old.password.not.match", HttpStatus.BAD_REQUEST),
    BUILDING_HAS_ACTIVE_CONTRACT(400,"building.has.active.contract", HttpStatus.BAD_REQUEST),
    FLOOR_HAS_ACTIVE_CONTRACT(400,"floor.has.active.contract", HttpStatus.BAD_REQUEST),
    INVALID_FEEDBACK_STATUS(400,"invalid.feedback.status", HttpStatus.BAD_REQUEST),
    TENANT_NOT_RENT_ROOM(400,"tenant.not.rent.room", HttpStatus.BAD_REQUEST),
    INVALID_TERMINATE_DATE(400,"invalid.terminate.date", HttpStatus.BAD_REQUEST),
    INVALID_EXTEND_DATE_AFTER(400,"invalid.extend.date.after", HttpStatus.BAD_REQUEST),
    INVALID_VEHICLE_REGISTRATION_CARD_BLANK(400,"invalid.vehicle.registration.card.blank", HttpStatus.BAD_REQUEST),
    CANNOT_DELETE_REPRESENTATIVE(400, "cannot.delete.representative", HttpStatus.BAD_REQUEST),
    TENANT_REPRESENTATIVE_DUPLICATE(400, "tenant.representative.duplicate", HttpStatus.BAD_REQUEST),
    INVALID_REPRESENTATIVE_CHANGE_TYPE_NULL(400, "invalid.representative.change.type.null", HttpStatus.BAD_REQUEST),
    STAY_IN_ROOM_REQUIRED(400, "stay.in.room.required", HttpStatus.BAD_REQUEST),
    NEW_TENANT_REQUIRED(400, "new.tenant.required", HttpStatus.BAD_REQUEST),
    METER_TYPE_NOT_MATCH_SERVICE(400,"meter.type.not.match.service",HttpStatus.BAD_REQUEST),
    OWNER_NOT_CONFIRMED(400, "owner.not.confirmed", HttpStatus.BAD_REQUEST),
    CANNOT_CREATE_WATER_METER_READING(400,"cannot.create.water.meter.reading", HttpStatus.BAD_REQUEST),


    // Code: 404
    USER_NOT_FOUND(404, "user.not.found", HttpStatus.NOT_FOUND),
    BUILDING_ID_NOT_FOUND(404, "building.id.not.found", HttpStatus.NOT_FOUND),
    CHAT_NOT_FOUND(404, "chat.not.found", HttpStatus.NOT_FOUND),
    MESSAGE_NOT_FOUND(404, "message.not.found", HttpStatus.NOT_FOUND),
    API_ENDPOINT_NOT_FOUND(404, "api.endpoint.not.found", HttpStatus.NOT_FOUND),
    PERMISSION_NOT_FOUND(404, "permission.not.found", HttpStatus.NOT_FOUND),
    ROLE_NOT_FOUND(404, "role.not.found", HttpStatus.NOT_FOUND),
    EMAIL_NOT_FOUND(404, "email.not.found", HttpStatus.NOT_FOUND),
    BUILDING_NOT_FOUND(404, "building.not.found", HttpStatus.NOT_FOUND),
    FLOOR_NOT_FOUND(404, "floor.not.found", HttpStatus.NOT_FOUND),
    ROOM_NOT_FOUND(404, "room.not.found", HttpStatus.NOT_FOUND),
    TENANT_NOT_FOUND(404, "tenant.not.found", HttpStatus.NOT_FOUND),
    METER_READING_NOT_FOUND(404, "meter.reading.not.found", HttpStatus.NOT_FOUND),
    ASSET_TYPE_NAME_INVALID(404, "asset.type.name.invalid", HttpStatus.NOT_FOUND),
    ASSET_GROUP_INVALID(404, "asset.group.invalid", HttpStatus.NOT_FOUND),
    DESCRIPTION_INVALID(404, "description.invalid", HttpStatus.NOT_FOUND),
    ASSET_TYPE_NOT_FOUND(404, "asset.type.not.found", HttpStatus.NOT_FOUND),
    ASSET_NOT_FOUND(404, "asset.not.found", HttpStatus.NOT_FOUND),
    VEHICLE_NOT_FOUND(404, "vehicle.not.found", HttpStatus.NOT_FOUND),
    METER_NOT_FOUND(404, "meter.not.found", HttpStatus.NOT_FOUND),
    SERVICE_NOT_FOUND(404, "service.not.found", HttpStatus.NOT_FOUND),
    CONTRACT_NOT_FOUND(404, "contract.not.found", HttpStatus.NOT_FOUND),
    DEFAULT_SERVICE_NOT_FOUND(404, "default.service.not.found", HttpStatus.NOT_FOUND),
    JOB_NOT_FOUND(404, "job.not.found", HttpStatus.NOT_FOUND),
    METER_NAME_REQUIRED(404, "meter.name.required", HttpStatus.NOT_FOUND),
    INITIAL_INDEX_REQUIRED(404, "initial.index.required", HttpStatus.NOT_FOUND),
    METER_CODE_NOT_FOUND(404, "meter.code.not.found", HttpStatus.NOT_FOUND),
    MANU_FACTURE_DATE_NOT_FOUND(404, "manu.facture.date.not.found", HttpStatus.NOT_FOUND),
    METER_CODE_EXISTED(404, "meter.code.existed", HttpStatus.NOT_FOUND),
    OLD_INDEX_NOT_FOUND(404, "old.index.not.found", HttpStatus.NOT_FOUND),
    NEW_INDEX_NOT_FOUND(404, "new.index.not.found", HttpStatus.NOT_FOUND),
    MONTH_NOT_FOUND(404, "month.not.found", HttpStatus.NOT_FOUND),
    MONTH_GREATER(404, "month.greater", HttpStatus.NOT_FOUND),
    MONTH_LESS(404, "month.less", HttpStatus.NOT_FOUND),
    YEAR_NOT_FOUND(404, "year.not.found", HttpStatus.NOT_FOUND),
    YEAR_GREATER(404, "year.greater", HttpStatus.NOT_FOUND),
    READING_DATE_NOT_FOUND(404, "reading.date.not.found", HttpStatus.NOT_FOUND),
    INVOICE_NOT_FOUND(404, "invoice.not.found", HttpStatus.NOT_FOUND),
    INVOICE_ID_REQUIRED(404, "invoice.id.required", HttpStatus.BAD_REQUEST),
    PAYMENT_METHOD_REQUIRED(404, "payment.method.required", HttpStatus.BAD_REQUEST),
    PAYMENT_STATUS_REQUIRED(404,"payment.status.required",HttpStatus.BAD_REQUEST),
    CONTRACT_TENANT_NOT_FOUND(404, "contract.tenant.not.found", HttpStatus.NOT_FOUND),
    CONTRACT_VEHICLE_NOT_FOUND(404, "contract.vehicle.not.found", HttpStatus.NOT_FOUND),
    DEPOSIT_NOT_FOUND(404, "deposit.not.found", HttpStatus.NOT_FOUND),
    REJECT_REASON_CANNOT_BLANK(404, "reject.reason.cannot.blank", HttpStatus.BAD_REQUEST),
    IMAGE_FEEDBACK_REQUIRED(404, "image.feedback.required", HttpStatus.BAD_REQUEST),
    TERMINATE_DATE_NOT_BLANK(404, "terminate.date.not.blank", HttpStatus.BAD_REQUEST),
    CONTRACT_FEEDBACK_TYPE_NOT_BLANK(404, "contract.feedback.type.not.blank", HttpStatus.BAD_REQUEST),
    INVALID_EXTEND_DATE_BLANK(404,"invalid.extend.date.blank", HttpStatus.BAD_REQUEST),

    // feedback
    FEED_BACK_NOT_FOUND(404, "feedback.not.found", HttpStatus.NOT_FOUND),
    CONTENT_NOT_FOUND(404, "content.not.found", HttpStatus.BAD_REQUEST),
    RATING_NOT_FOUND(404, "rating.not.found", HttpStatus.BAD_REQUEST),
    RATING_TOO_LOW(404, "rating.too.low", HttpStatus.BAD_REQUEST),
    RATING_TOO_HIGH(404, "rating.too.high", HttpStatus.BAD_REQUEST),
    FEED_BACK_STATUS_NOT_FOUND(404, "feedback.status.not.found", HttpStatus.BAD_REQUEST),
    FEED_BACK_TYPE_NOT_FOUND(404, "feedback.type.not.found", HttpStatus.BAD_REQUEST),
    FEED_BACK_DUPLICATED(404, "feed.back.duplicated", HttpStatus.BAD_REQUEST),
    NOTE_NOT_FOUND(404, "note.not.found", HttpStatus.NOT_FOUND),
    ASSET_STATUS_NOT_FOUND(404, "asset.status.not.found", HttpStatus.NOT_FOUND),
    PAYMENT_RECEIPT_NOT_FOUND(404, "payment.receipt.not.found", HttpStatus.NOT_FOUND),
    ASSET_ROOM_NOT_FOUND(404, "asset.room.not.found", HttpStatus.NOT_FOUND),
    CANNOT_UPDATE_PROCESSED_FEEDBACK(400,"cannot.update.processed.feedback", HttpStatus.BAD_REQUEST),
    FEED_BACK_HISTORY_NOT_FOUND(404, "feedback.history.not.found", HttpStatus.NOT_FOUND),
    FEEDBACK_NAME_NOT_BLANK(404, "feedback.name.blank", HttpStatus.BAD_REQUEST),
    FEEDBACK_RATING_ALREADY_RATED(400,"feedback.rating.already.rated", HttpStatus.BAD_REQUEST),
    FEEDBACK_NOT_COMPLETED(400,"feedback.not.completed", HttpStatus.BAD_REQUEST),

    // notification
    NOTIFICATION_TITLE_REQUIRED(404, "notification.title.required", HttpStatus.NOT_FOUND),
    NOTIFICATION_CONTENT_REQUIRED(404, "notification.content.required", HttpStatus.NOT_FOUND),
    NOTIFICATION_TYPE_REQUIRED(404, "notification.type.required", HttpStatus.NOT_FOUND),
    SEND_TO_ALL_REQUIRED(404, "send.to.all.required", HttpStatus.NOT_FOUND),
    NOTIFICATION_USERS_REQUIRED(404, "notification.users.required", HttpStatus.NOT_FOUND),
    NOTIFICATION_NOT_FOUND(404, "notification.not.found", HttpStatus.NOT_FOUND),
    NOTIFICATION_NOT_ASSIGNED(404, "notification.not.assigned", HttpStatus.NOT_FOUND),
    INVOICE_DETAIL_NOT_FOUND(404, "invoice.detail.not.found", HttpStatus.NOT_FOUND),
    SERVICE_ROOM_CANNOT_DELETE(400, "service.room.cannot.delete", HttpStatus.BAD_REQUEST),
    // Code: 409
    OTP_ALREADY_SENT(409, "otp.already.sent", HttpStatus.BAD_REQUEST),
    USER_ALREADY_DELETED(409, "user.already.deleted", HttpStatus.BAD_REQUEST),
    USER_ALREADY_LOCKED(409, "user.already.locked", HttpStatus.BAD_REQUEST),
    EMAIL_EXISTED(409, "email.already.existed", HttpStatus.CONFLICT),
    PHONE_NUMBER_EXISTED(409, "phone.number.existed", HttpStatus.CONFLICT),
    FlOOR_EXISTED(409, "floor.existed", HttpStatus.CONFLICT),
    FLOOR_ALREADY_EXISTS(409, "floor.already.exists", HttpStatus.CONFLICT),
    PERMISSION_EXISTED(409, "permission.existed", HttpStatus.BAD_REQUEST),
    ROLE_EXISTED(409, "role.existed", HttpStatus.BAD_REQUEST),
    BUILDING_CODE_EXISTED(409, "building.code.existed", HttpStatus.CONFLICT),
    BUILDING_NAME_EXISTED(409, "building.name.existed", HttpStatus.CONFLICT),
    ROOM_CODE_EXISTED(409, "room.code.existed", HttpStatus.BAD_REQUEST),
    ID_NUMBER_EXISTED(409, "id.number.existed", HttpStatus.CONFLICT),
    ASSET_TYPE_EXISTED(409, "asset.type.existed", HttpStatus.BAD_REQUEST),
    LICENSE_PLATE_EXISTED(409, "license.plate.existed", HttpStatus.BAD_REQUEST),
    DUPLICATE_ASSET_NAME(409, "duplicate.asset.name", HttpStatus.BAD_REQUEST),
    ROOM_EXISTED_SERVICE(409, "room.existed.service", HttpStatus.BAD_REQUEST),
    SERVICE_ROOM_NOT_FOUND(409, "service.room.not.found", HttpStatus.NOT_FOUND),
    ROOM_ALREADY_HAS_CONTRACT(409, "room.already.has.contract", HttpStatus.BAD_REQUEST),
    NEW_INDEX_LESS_THAN_OLD(409, "new.index.less.than.old", HttpStatus.BAD_REQUEST),
    METER_READING_EXISTED(409, "meter.reading.existed", HttpStatus.CONFLICT),
    DUPLICATE_SERVICE_CATEGORY(409, "duplicate.service.category", HttpStatus.BAD_REQUEST),
    METER_NAME_ALREADY_EXISTS_IN_ROOM(409,"meter.name.already.exists.in.this.room",HttpStatus.BAD_REQUEST),
    METER_TYPE_ALREADY_EXISTS_IN_ROOM(409,"meter.type.already.exists.in.this.room",HttpStatus.BAD_REQUEST),
    PAYMENT_RECEIPT_CANNOT_BE_UPDATED(409, "payment.receipt.cannot.be.updated", HttpStatus.BAD_REQUEST),
    INVALID_PAYMENT_STATUS_CHANGE(409, "invalid.payment.status.change", HttpStatus.BAD_REQUEST),
    PAYMENT_RECEIPT_ALREADY_EXISTS(409, "payment.receipt.already.exists", HttpStatus.BAD_REQUEST),
    INVALID_FEEDBACK_STATUS_COMPLETE(409, "invalid.feedback.status.complete", HttpStatus.BAD_REQUEST),

    ;

    final int code;
    final String message;
    final HttpStatus status;

    ErrorCode(int code, String message, HttpStatus status) {
        this.code = code;
        this.message = message;
        this.status = status;
    }
}